DAY -1 TASK

1)Write a blog on Difference between HTTP1.1 vs HTTP2
Answer:
HTTP is a request-response protocol that allows users to communicate data on the World Wide Web (WWW) and transfer hypertext.
 HTTP/1.1: loads resources one after the other, so if one resource cannot be loaded,  it blocks all the other resources behind it.
In contrast, HTTP/2 :is able to use a single TCP connection to send multiple streams of data at once so that no one resource blocks any other resource. 

Difference between HTTP1.1 vs HTTP2
Multiplexing: HTTP/1.1 loads resources one after the other, so if one resource cannot be loaded,
it blocks all the other resources behind it. In contrast,HTTP/2 is able to use a single TCP connection to send multiple streams of data
at once so that no one resource blocks any other resource.
HTTP2 is much faster and more reliable than HTTP1. HTTP1 loads a single request for every TCP connection, while HTTP2 avoids network delay by using multiplexing.
HTTP is a network delay sensitive protocol in the sense that if there is less network delay, then the page loads faster.

2)Write a blog about objects and its internal representation in Javascript
Answer:
Objects, in JavaScript, is it’s most important data-type and forms the building blocks for modern JavaScript. 
These objects are quite different from JavaScript’s primitive data-types(Number, String, Boolean, null, undefined and symbol)
in the sense that while these primitive data-types all store a single value each (depending on their types).
Objects are more complex and each object may contain any combination of these primitive data-types as well as reference data-types.
An object, is a reference data type. Variables that are assigned a reference value are given a reference or a pointer to that value. 
That reference or pointer points to the location in memory where the object is stored. The variables don’t actually store the value.
For Eg. If your object is a student, it will have properties like name, age, address, id, etc and methods like updateAddress, updateNam, etc.
Like all JavaScript variables, both the object name (which could be a normal variable) and property name are case sensitive. 
You can define a property by assigning it a value. 
For example, let’s create an object named myCar and give it properties named make, model, and year as follows:

var myCar = new Object();
myCar.make = 'Ford';
myCar.model = 'Mustang';
myCar.year = 1969;
Unassigned properties of an object are undefined (and not null).
myCar.color; // undefined
